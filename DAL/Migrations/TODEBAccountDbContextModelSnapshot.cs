// <auto-generated />
using System;
using DAL.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(TODEBAccountDbContext))]
    partial class TODEBAccountDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("Models.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<string>("Created")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NationIdentity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("Models.Entities.Card", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CVC")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("CardId")
                        .HasColumnType("int");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CardType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExpirationDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("CardId");

                    b.ToTable("cards");
                });

            modelBuilder.Entity("Models.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.Property<bool>("isCreditCard")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("TransactionId");

                    b.ToTable("transactions");
                });

            modelBuilder.Entity("Models.Entities.Card", b =>
                {
                    b.HasOne("Models.Entities.Account", null)
                        .WithMany("Cards")
                        .HasForeignKey("CardId");
                });

            modelBuilder.Entity("Models.Entities.Transaction", b =>
                {
                    b.HasOne("Models.Entities.Card", null)
                        .WithMany("Transactions")
                        .HasForeignKey("TransactionId");
                });

            modelBuilder.Entity("Models.Entities.Account", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("Models.Entities.Card", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
